%class FSMSolution
%header FSMSolution.h

%start FSMMap::Start

%map FSMMap
%%
Start
{
	symb( c : char )
		[ c == 'e' ]
				Static_part		{ BufferAdd( c ); }
}

Static_part
{
	symb( c : char )
		[ ctxt.BufferValidStatic() && !ctxt.BufferFullStatic() ]
				Static_part			{ BufferAdd( c ); }
	symb( c : char )
		[ c == '|' && ctxt.BufferFullStatic() ]
				Name				{ ResetBuffer(); }
}
				
Name
{
	symb( c : char )
		[ ( c >= 'a' && c <= 'z' ) || ( c >= '0' && c <= '9' ) || ( c >= 'A' && c <= 'Z' ) ||
			c == '_' || c == '+' || c == '-' ]
				Name
							{ CounterTick(); }
	symb( c : char )
		[ c == '|' && ( ctxt.CounterState() > 0 ) ]
				Size		{ ResetCounter(); }
}

Size
{
	symb( c : char )
		[ c >= '0' && c <= '9' ]
				nil			{ CounterTick(); }
	symb( c : char )
		[ c == '|' && ( ctxt.CounterState() > 0 ) ]
				Hash		{ ResetCounter(); }
}

Hash
{
	symb( c : char )
		[ ( ( c >= '0' && c <= '9' ) || ( c >= 'a' && c <= 'f' ) || ( c >= 'A' && c <= 'F' ) ) && ( ctxt.CounterState() < 32 ) ]
				Hash		{ CounterTick(); }
	symb( c : char ) 
		[ c == '|' && ( ctxt.CounterState() == 32 ) ]
				Ending		{ ResetCounter(); }
}

Ending
{
	symb( c : char )
		[ c == '/' ]
				OK			{ Acceptable(); }
}

OK
{
	EOS			nil			{ Acceptable(); }
}

Error
{
	symb( c : char )
				nil			{ Unacceptable(); }
}

Default
{
	EOS		Error	{ Unacceptable(); }
	symb( c : char )	Error	{ Unacceptable(); }
}
%%
